<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.fpm</groupId>
  <artifactId>LibraryFPM</artifactId>
  <packaging>war</packaging>
  <version>0.0.1-SNAPSHOT</version>
  <name>LibraryFPM Maven Webapp</name>
  <url>http://maven.apache.org</url>
  
  <properties>
  	<java-version>1.6</java-version>
  	<org.springframework-version>3.1.1.RELEASE</org.springframework-version>
  	<org.aspectj-version>1.6.10</org.aspectj-version>
  	<skip.recreate.database>false</skip.recreate.database>
  	<skip.recreate.schema>false</skip.recreate.schema>
  	<postgresqlVersion>9.1-901.jdbc4</postgresqlVersion>
  	<jersey.version>1.18</jersey.version>
  	<libfpm.env>dev</libfpm.env>
  	<org.hibernate-jpamodelgen.version>1.2.0.Final</org.hibernate-jpamodelgen.version>
  </properties>
  
  <!-- For test -->
  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>
    
    <dependency>
		<groupId>org.hamcrest</groupId>
		<artifactId>hamcrest-all</artifactId>
		<version>1.3</version>
		<scope>test</scope>
	</dependency>
            
    
  <!-- Spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${org.springframework-version}</version>
			<exclusions>
				<!-- Exclude Commons Logging in favor of SLF4j -->
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				 </exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${org.springframework-version}</version>
		</dependency>
		
		<dependency>
		  <groupId>org.springframework</groupId>
		  <artifactId>spring-core</artifactId>
		  <version>${org.springframework-version}</version>
		</dependency>
		
		<dependency>
		  <groupId>org.springframework</groupId>
		  <artifactId>spring-beans</artifactId>
		  <version>${org.springframework-version}</version>
		</dependency>
		
		<dependency>
		  <groupId>org.springframework</groupId>
		  <artifactId>spring-context</artifactId>
		  <version>${org.springframework-version}</version>
		</dependency>
		
		<dependency>
		  <groupId>org.springframework</groupId>
		  <artifactId>spring-context-support</artifactId>
		  <version>${org.springframework-version}</version>
		</dependency>
		
		<dependency>
		  <groupId>org.springframework</groupId>
		  <artifactId>spring-jdbc</artifactId>
		  <version>${org.springframework-version}</version>
		</dependency>
		
		<dependency>
		  <groupId>org.springframework</groupId>
		  <artifactId>spring-test</artifactId>
		  <version>${org.springframework-version}</version>
		  <scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			 <version>${org.springframework-version}</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-jpa</artifactId>
			<version>1.4.1.RELEASE</version>
		</dependency>
            
				
		<!-- AspectJ -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>${org.aspectj-version}</version>
		</dependency>	
		
		<!-- @Inject -->
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<version>1</version>
		</dependency>
				
		<!-- Servlet -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<version>2.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>
		
		<!-- Hibernate -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>3.6.0.Final</version>
		</dependency>

		<dependency>
			<groupId>org.hibernate.javax.persistence</groupId>
			<artifactId>hibernate-jpa-2.0-api</artifactId>
			<version>1.0.1.Final</version>
		</dependency>
		
		 <dependency>
             <groupId>org.hibernate</groupId>
             <artifactId>hibernate-jpamodelgen</artifactId>
             <version>1.2.0.Final</version>
         </dependency>
		
		<!-- DB -->
		<dependency>
			<groupId>postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>${postgresqlVersion}</version>
		</dependency>
		
		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
			<version>20030825.184428</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		
		<dependency>
			<groupId>commons-pool</groupId>
			<artifactId>commons-pool</artifactId>
			<version>20030825.183949</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.6</version>
		</dependency>
		
		<!-- jersey  -->
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-server</artifactId>
			<version>${jersey.version}</version>
		</dependency>
		
		
		<dependency>
			<groupId>com.sun.jersey.contribs</groupId>
			<artifactId>jersey-spring</artifactId>
			<version>${jersey.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-core</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-web</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-beans</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-context</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		
		<dependency>
		    <groupId>com.sun.jersey</groupId>
		    <artifactId>jersey-json</artifactId>
		    <version>${jersey.version}</version>
		 </dependency>
		 
		 <dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<version>2.3.0</version>
		</dependency>
		
  </dependencies>
  
  <profiles>
  	<profile>
  		<id>Dedelop</id>
  		<properties>
  			<libfpm.env>dev</libfpm.env>
  			<skip.recreate.database>false</skip.recreate.database>
  			<skip.recreate.schema>false</skip.recreate.schema>
  		</properties>
  		<activation>
  			<property>
  				<name>developEnv</name>
  			</property>
  		</activation>
  	</profile>
  	
  	<profile>
  		<id>Dedelop_Work</id>
  		<properties>
  			<libfpm.env>work</libfpm.env>
  			<skip.recreate.database>false</skip.recreate.database>
  			<skip.recreate.schema>false</skip.recreate.schema>
  		</properties>
  		<activation>
  			<property>
  				<name>developWork</name>
  			</property>
  		</activation>
  	</profile>
  	
  	<profile>
  		<id>Heroku</id>
  		<properties>
  			<libfpm.env>heroku</libfpm.env>
  			<skip.recreate.database>true</skip.recreate.database>
  			<skip.recreate.schema>false</skip.recreate.schema>
  		</properties>
  		<activation>
  			<activeByDefault>true</activeByDefault>
  		</activation>
  	</profile>
  </profiles>
  
  

  <build>
  
    <finalName>LibraryFPM</finalName>

        <plugins>
        	<plugin>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.9</version>
				<configuration>
					<additionalProjectnatures>
						<projectnature>org.springframework.ide.eclipse.core.springnature</projectnature>
					</additionalProjectnatures>
					<additionalBuildcommands>
						<buildcommand>org.springframework.ide.eclipse.core.springbuilder</buildcommand>
					</additionalBuildcommands>
					<downloadSources>true</downloadSources>
					<downloadJavadocs>true</downloadJavadocs>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.5.1</version>
				<configuration>
					<source>${java-version}</source>
                    <target>${java-version}</target>
					<proc>none</proc>
					<showWarnings>true</showWarnings>
					<showDeprecation>true</showDeprecation>
				</configuration>
			</plugin>
        	<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<version>8.1.13.v20130916</version>
				<artifactId>jetty-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.6</version>
			</plugin>
			
            <!-- RECREATE data base -->
            <plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>properties-maven-plugin</artifactId>
				<version>1.0-alpha-2</version>
				<executions>
					<execution>
						<id>read-props</id>
						<phase>initialize</phase>
						<goals>
							<goal>read-project-properties</goal>
						</goals>
						<configuration>
							<files>
								<file>${project.basedir}/src/main/resources/postgresql_db_${libfpm.env}.properties</file>
							</files>
						</configuration>
					</execution>
				</executions>
			</plugin>
			
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>sql-maven-plugin</artifactId>
				<version>1.5</version>
	
				<dependencies>
					<dependency>
						<groupId>postgresql</groupId>
						<artifactId>postgresql</artifactId>
						<version>${postgresqlVersion}</version>
					</dependency>
				</dependencies>
	
				<configuration>
					<driver>${db.driver}</driver>
					<url>${db.url.short}</url>
					<username>${db.username}</username>
					<password>${db.password}</password>
				</configuration>
	
				<executions>
					<execution>
						<id>drop-db</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<autocommit>true</autocommit>
							<skip>${skip.recreate.database}</skip>
							<sqlCommand>
								DROP DATABASE IF EXISTS ${db.name};
							</sqlCommand>
							<onError>abort</onError>
						</configuration>
					</execution>
					
					<execution>
						<id>create-db</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<autocommit>true</autocommit>
							<skip>${skip.recreate.database}</skip>
							<onError>abort</onError>
							<sqlCommand>
								CREATE DATABASE ${db.name};
							</sqlCommand>
						</configuration>
					</execution>

					<execution>
						<id>create-masterdb-schema</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<driver>${db.driver}</driver>
							<url>${db.url}</url>
							<username>${db.username}</username>
							<password>${db.password}</password>
							<autocommit>true</autocommit>
							<skip>${skip.recreate.shema}</skip>
							<sqlCommand>
								DROP SCHEMA ${db.schema} CASCADE;
								CREATE SCHEMA ${db.schema};
							</sqlCommand>
							<srcFiles>
								<srcFile>ddl/postgresql/shema.sql</srcFile>
							</srcFiles>
						</configuration>
					</execution>
					
					<execution>
						<id>insert-data</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<driver>${db.driver}</driver>
							<url>${db.url}</url>
							<username>${db.username}</username>
							<password>${db.password}</password>
							<autocommit>true</autocommit>
							<skip>${skip.recreate.shema}</skip>
							<srcFiles>
								<srcFile>ddl/test_data.sql</srcFile>
							</srcFiles>
						</configuration>
					</execution>
					
				</executions>
			</plugin>
			
			<plugin>
			    <groupId>org.apache.maven.plugins</groupId>
			    <artifactId>maven-dependency-plugin</artifactId>
			    <version>2.3</version>
			    <executions>
			        <execution>
			            <phase>package</phase>
			            <goals><goal>copy</goal></goals>
			            <configuration>
			                <artifactItems>
			                    <artifactItem>
			                        <groupId>org.mortbay.jetty</groupId>
			                        <artifactId>jetty-runner</artifactId>
			                        <version>7.4.5.v20110725</version>
			                        <destFileName>jetty-runner.jar</destFileName>
			                    </artifactItem>
			                </artifactItems>
			            </configuration>
			        </execution>
			    </executions>
			</plugin>
			
			<plugin>
				<groupId>org.bsc.maven</groupId>
				<artifactId>maven-processor-plugin</artifactId>
				<version>2.2.4</version>
				<executions>
					<execution>
						<id>process</id>
						<goals>
							<goal>process</goal>
						</goals>
						<phase>generate-sources</phase>
						<configuration>
							<outputDirectory>target/metamodel</outputDirectory>
							<processors>
								<processor>
									org.hibernate.jpamodelgen.JPAMetaModelEntityProcessor
								</processor>
							</processors>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.8</version>
				<executions>
					<execution>
						<id>add-source</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>target/metamodel</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
        </plugins>
  </build>
</project>
